- hosts: master
  become: yes
  become_user: root  
  gather_facts: True
  vars:
    join_cmd: /vagrant/ansible-playbook/kubeadm-join.yaml

  tasks:
    - name: include k8s vartsion
      include_vars: /vagrant/ansible-playbook/versions.yml

    ## k8sマスタを初期化
    #
    - name: "kubeadm reset v1.11 or later"
      command: kubeadm reset -f
      when: k8s_minor_ver|int >= 11

    - name: "kubeadm reset v1.10 or eary"
      command: kubeadm reset
      when: (k8s_minor_ver == "10") or (k8s_minor_ver == "9")
   
   ## ifconfigを使えるように、net-toolsをインストール
    #
    - name: Install net-tools
      apt:
        name: net-tools
        state: present
        update_cache: yes
 
  ## HostOnly Interface の IPアドレス取得
    #
    - name: getting hostonly ip address
      command: ifconfig enp0s8
      register: ip

    - name: kubeadm init
      command: kubeadm init --ignore-preflight-errors=all --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address={{ ip.stdout_lines[1].split('inet')[1].split(' ')[1] }} --service-cidr=10.32.0.0/24
      register: join


    #- debug : msg="{{ join.stdout_lines }}"


    ## k8sノード用コマンドを保存
    #
    - file:
        path: "{{ join_cmd }}"
        state: absent

    - name: kubeadm < 1.13
      shell: echo "join_command" ":" {{ join.stdout_lines[-1] }} > {{ join_cmd }}
      when: k8s_minor_ver|int < 14


    - name: kubeadm >= 1.14
      shell: echo "join_command" ":" {{ join.stdout_lines[-2] }} {{ join.stdout_lines[-1] }} > {{ join_cmd }}
      when: k8s_minor_ver|int >= 14


    ## kubeletのDNSのIPアドレスを変更
    #
    - name: change config.yaml
      replace:
        dest: /var/lib/kubelet/config.yaml
        regexp: '10.96.0.10'
        replace: 10.32.0.10
      when: k8s_minor_ver|int > 11

    ## kubeletをリスタートして変更を反映
    #
    - name: daemon-reload and restart kubelet
      systemd:
        state: restarted
        daemon_reload: yes
        name: kubelet

    ## kubeconfigディレクトリ作成
    #
    - name: mkdir kubeconfig
      file:
        path:  /home/vagrant/.kube
        state: directory
        owner: vagrant
        group: vagrant
        mode:  '0755'

    - name: mkdir /vagrant/kubeconfig
      file:
        path:  /vagrant/kubeconfig
        state: directory
        owner: vagrant
        group: vagrant
        mode:  '0755'


    ##  configファイルのコピー
    #
    - name: chmod admin.conf
      file:
        path:  /etc/kubernetes/admin.conf
        owner: vagrant
        group: vagrant
        mode:  '0600'
    
    - name: copy config to home dir
      copy:
        src:  /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        owner: vagrant
        group: vagrant
        mode:  '0600'

    #- name: copy config to host dir
    #  copy:
    #    src:  /etc/kubernetes/admin.conf
    #    dest: /vagrant/kubeconfig/config
    #    owner: vagrant
    #    group: vagrant
    #    mode:  '0600'


    ## flannelのマニフェストダウンロード
    #
    - name: download Manifest of Flannel for k8s ver <=11
      get_url:
        url: https://raw.githubusercontent.com/coreos/flannel/v0.10.0/Documentation/kube-flannel.yml
        dest: /home/vagrant/
        mode: '0644'
        owner: vagrant
        group: vagrant
      when: k8s_minor_ver|int <= 11

    #- name: download Manifest of Flannel for k8s ver > 11
    #  get_url:
    #    url: https://raw.githubusercontent.com/coreos/flannel/v0.11.0/Documentation/kube-flannel.yml
    #    dest: /home/vagrant/
    #    mode: '0644'
    #    owner: vagrant
    #    group: vagrant
    #  when: k8s_minor_ver|int > 11

    - name: download Manifest of Flannel for k8s ver > 11
      get_url:
        url: https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
        dest: /home/vagrant/
        mode: 0644
        owner: vagrant
        group: vagrant
      when: k8s_minor_ver|int > 11

    ## インタフェースの追加
    #
    - name: add a new line
      blockinfile:
        path: /home/vagrant/kube-flannel.yml
        insertafter: '--kube-subnet-mgr$'
        content: '        - --iface=enp0s8'

    ## Flannelのデプロイ
    #
    - name: Deploy Flannel 
      become_user: vagrant
      command: kubectl apply -f /home/vagrant/kube-flannel.yml


    ## Metrics Server インストール
    - name: Install Metrics Server
      get_url:
        url: https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.6/components.yaml
        dest: /home/vagrant/metrics-server-deployment.yaml
        mode: '0644'
      become_user: vagrant 
    
    - name: add a new line
      blockinfile:
        path: /home/vagrant/metrics-server-deployment.yaml
        insertafter: '        args:'
        block: |
           # added lines
                     - --kubelet-insecure-tls
                     - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      become_user: vagrant
    
    - name: Deploy Metrics Server
      command: kubectl apply -f /home/vagrant/metrics-server-deployment.yaml
      become_user: vagrant
      args:
        chdir: /home/vagrant
      become_user: vagrant    


    ## Dashboard UI インストール
    #
    - name: Download Dashboard Manifest
      get_url:
        url: https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta6/aio/deploy/recommended.yaml
        dest: /home/vagrant/
        mode: '0644'
        owner: vagrant
        group: vagrant

    - name: Change Dashboard RBAC
      replace:
        path: /home/vagrant/recommended.yaml
        after: '  kind: ClusterRole'
        regexp: '^  name: kubernetes-dashboard'
        replace: '  name: cluster-admin'

    - name: Deploy Dashboard UI
      become_user: vagrant
      command: kubectl apply -f /home/vagrant/recommended.yaml

    - name: setup kubeconfig
      become_user: vagrant    
      shell: |
        TOKEN=$(kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret |grep kubernetes-dashboard-token-* | awk '{print $1}') |awk '$1=="token:"{print $2}')
        kubectl config set-credentials kubernetes-admin --token="${TOKEN}"

    - name: copy config to host dir
      copy:
        src:  /home/vagrant/.kube/config
        dest: /vagrant/kubeconfig/config
        owner: vagrant
        group: vagrant
        mode:  '0600'
